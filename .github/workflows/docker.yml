name: Docker build and push image
on:  
    pull_request:
        types: [opened, closed]
        branches: [main]
jobs:
    pull_request_open:
        if: github.event.action == 'opened'
        runs-on: ubuntu-latest

        steps:
          - name: echo
            run: echo "New pull request"

    build_and_push:
        if: github.event.action == 'closed'
        runs-on: ubuntu-latest
        env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            IMAGE: ${{ vars.IMAGE_NAME }}
            DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME}}/${{ vars.IMAGE_NAME }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with: 
                images: ${{ env.DOCKERHUB_REPOSITORY }}
                tags: |
                  type=sha
                  type=raw,value=latest

            - name: Docker Login
              uses: docker/login-action@v3
              with:
                username: ${{ env.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with: 
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                cache-from: type=registry,ref=${{ env.DOCKERHUB_REPOSITORY }}:buildcache
                cache-to: type=registry,ref=${{ env.DOCKERHUB_REPOSITORY }}:buildcache,mode=max
                platforms: linux/amd64,linux/arm64

            - name: extract SHA tag
              id: extract_tag
              run: |
                sha_tag=$(echo ${{ steps.meta.outputs.tags }} | grep -o 'sha.*')
                echo "::set-output name=sha_tag::$sha_tag"

            - name: setup-helmfile
              uses: mamezou-tech/setup-helmfile@v2.0.0
              env:
                KUBECONFIG: ${{ secrets.KUBECONFIG }}

            - name: deploy
              run: |
                helmfile -f charts/helmfile.yaml apply \
                -set image.tag=${{ steps.extract_tag.sha_tag }}
